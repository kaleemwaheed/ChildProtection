@model BOL.tbl_ChildInfo
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script>

    //$(function () { // will trigger when the document is ready
    //   $('.datepicker').datepicker(); //Initialise any date pickers
    //});
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#ShowImage')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(200);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }



    function Upload() {
        var fileUpload = document.getElementById("file");
        if (typeof (fileUpload.files) != "undefined") {

            var size = parseFloat(fileUpload.files[0].size / 1024).toFixed(2);

            if (size > 4096) {
                alert("Image size Must be less than 4Mb.Your Image size is " + size + "Mb  greater than 4Mb");
                // document.location.reload(true);
                window.history.back();
                //location.reload();
                //window.location.reload();

            }

        } else {
            alert("This browser does not support HTML5.");
        }
    }
</script>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Missing Form</h2>
@if (TempData["Msg"] != null)
{
    <h3>@TempData["Msg"].ToString()</h3>
}

@using (Html.BeginForm("Create", "SubmitReport", FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "on" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.ChildName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Child Name</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChildName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChildName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ChildAlternativeName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Nick Name</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChildAlternativeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChildAlternativeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", (IEnumerable<SelectListItem>)ViewBag.Gender, new { htmlAttributes = new { @class = "form-control" } })

                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Build, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Build", (IEnumerable<SelectListItem>)ViewBag.Build, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Build, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.HairColor, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Hair Colour</b></h5>
            <div class="col-md-10">

                @Html.DropDownList("HairColor", (IEnumerable<SelectListItem>)ViewBag.HairColour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HairColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.EyeColor, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Eye Colour</b></h5>
            <div class="col-md-10">
                @Html.DropDownList("EyeColor", (IEnumerable<SelectListItem>)ViewBag.EyeColour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EyeColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Glasses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Glasses", (IEnumerable<SelectListItem>)ViewBag.Glasses, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Glasses, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @*@Html.LabelFor(model => model.IdentityMark, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Select Identity Mark</b></h5>
            <div class="col-md-10">
                @Html.DropDownList("IdentityMark", (IEnumerable<SelectListItem>)ViewBag.IdentityMark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdentityMark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.IdentityMark, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Select Body Part</b></h5>
            <div class="col-md-10">
                @Html.DropDownList("IdentificationMarkOnBody", (IEnumerable<SelectListItem>)ViewBag.IdentityMarkLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdentificationMarkOnBody, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @*@Html.LabelFor(model => model.Shirt, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Shirt/Kameez Colour</b></h5>
            <div class="col-md-10">
                @Html.DropDownList("Shirt", (IEnumerable<SelectListItem>)ViewBag.Colour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shirt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Trouser_Skert, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Pent/Shalwar Colour</b></h5>
            <div class="col-md-10">
                @Html.DropDownList("Trouser_Skert", (IEnumerable<SelectListItem>)ViewBag.Colour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Trouser_Skert, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.MissingLocation, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Provinve</b></h5>
            <div class="col-md-10">
               @Html.DropDownList("Province", (IEnumerable<SelectListItem>)ViewBag.Province, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.MissingLocation, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>City</b></h5>
            <div class="col-md-10">
                @Html.DropDownList("City", (IEnumerable<SelectListItem>)ViewBag.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Missing Location</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChildMissingLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChildMissingLocation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Select Image</b></h5>
            <div class="col-md-10">
                <input type="file" name="file" id="file"  onchange="readURL(this);" style="width: 100%;" /> <br />
                <img id="ShowImage" src="#" />
                @Html.ValidationMessageFor(model => model.imageUrl, "", new { @class = "text-danger" })
               
                @*@Html.EditorFor(model => model.imageUrl, new { htmlAttributes = new { @class = "form-control" } })*@

            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Child_Missing_Date_Time, htmlAttributes: new {  @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Child Missing Date</b></h5>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Child_Missing_Date_Time, new { htmlAttributes = new { placeholder = " 01 01 2000", @class = "form-control" } })*@
                <input type="datetime-local" class="form-control" name="Child_Missing_Date_Time" id="" placeholder="Date">

           @*     @Html.TextBoxFor(model => model.Child_Missing_Date_Time, new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." })*@
                @Html.ValidationMessageFor(model => model.Child_Missing_Date_Time, "", new { @class = "text-danger" })
            </div>
        </div>



        <br>
        <hr />
        <h4>DETAILS OF PERSON REPORTING MISSING CHILD</h4>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Report_by_Person_Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Report by Person</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Report_by_Person_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Report_by_Person_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Address</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Phone_, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Phone#</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone_, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone_, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Relation_to_Missing_Child, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Relation to Child</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Relation_to_Missing_Child, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Relation_to_Missing_Child, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <hr />

        <h4>DETAILS OF FATHER MISSING CHILD</h4>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Father_Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Guardian Name</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Father_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Father_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Address_Of_Child, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Address</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address_Of_Child, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address_Of_Child, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Phone__, htmlAttributes: new { @class = "control-label col-md-2" })*@

            <h5 class="control-label col-md-2"><b>Phone#</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone__, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone__, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" onclick="Upload()" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
