@model BOL.tbl_ChildInfo
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script>
    $(document).ready(function () {
        $("#colors option").each(function () {
            if ($(this).val() != '') {
                $(this).css('background-color', $(this).val());
            }
        });
    });
    //$(function () { // will trigger when the document is ready
    //   $('.datepicker').datepicker(); //Initialise any date pickers
    //});
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#ShowImage')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(200);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }



    function Upload() {
        var fileUpload = document.getElementById("file");
        if (typeof (fileUpload.files) != "undefined") {

            var size = parseFloat(fileUpload.files[0].size / 1024).toFixed(2);

            if (size > 4096) {
                alert("Image size Must be less than 4Mb.Your Image size is " + size + "Kb  greater than 4Mb");
                // document.location.reload(true);
                @*window.location.href ="@Url.Action("Index", "SubmitReport" , new { area = "Common" })"*@
                //window.history.back();
                //location.reload();
                //window.history.back();
                //window.location.reload();

            }

        } else {
            alert("This browser does not support HTML5.");
        }
    }
    function UploadCheck() {
        var fileUpload = document.getElementById("file");
        if (typeof (fileUpload.files) != "undefined") {

            var size = parseFloat(fileUpload.files[0].size / 1024).toFixed(2);

            if (size > 4096) {
                alert("Image size Must be less than 4Mb.Your Image size is " + size + "Kb  greater than 4Mb");
                // document.location.reload(true);
                @*window.location.href ="@Url.Action("Index", "SubmitReport" , new { area = "Common" })"*@
                //window.history.back();
                //location.reload();
                window.history.back();
                //window.location.reload();

            }

        } else {
            alert("This browser does not support HTML5.");
        }
    }
</script>

@{
    ViewBag.Title = " ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Missing Form</h2>
@if (TempData["Msg"] != null)
{
    <h3 class = "text-danger" >@TempData["Msg"].ToString()</h3>
}

@using (Html.BeginForm("Create", "SubmitReport", FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "on" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.ChildName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Child Name</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChildName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChildName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ChildAlternativeName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Nick Name</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChildAlternativeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChildAlternativeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Gender</b></h5>
            <div class="col-md-10">
                <select name="Gender">
                    <option value="Black">Male</option>
                    <option value="Blue">Female</option>

                </select>

            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Gender", (IEnumerable<SelectListItem>)ViewBag.Gender, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Build, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Build", (IEnumerable<SelectListItem>)ViewBag.Build, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Build, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Build</b></h5>
            <div class="col-md-10">
                <select name="Build">
                    <option>Fat</option>
                    <option>Stocky</option>
                    <option>Slim</option>
                    <option>Thin</option>
                    <option>Medium</option>
                    <option>Muscular</option>
                </select>
            </div>
        </div>


        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Hair Colour</b></h5>
            <div class="col-md-10">
                <select id="colors" name="HairColor">
                    <option value="Black">Black</option>
                    <option value="Blue">Blue</option>
                    <option value="Brown">brown</option>
                    <option value="Gray">gray</option>
                    <option value="White">White</option>
                    <option value="Red">Red</option>
                </select>

            </div>
        </div>



        @*<div class="form-group">
                @Html.LabelFor(model => model.HairColor, htmlAttributes: new { @class = "control-label col-md-2" })
                <h5 class="control-label col-md-2"><b>Hair Colour</b></h5>
                <div class="col-md-10">

                    @Html.DropDownList("HairColor", (IEnumerable<SelectListItem>)ViewBag.HairColour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HairColor, "", new { @class = "text-danger" })
                </div>
            </div>*@



        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Eye Colour</b></h5>
            <div class="col-md-10">
                <select id="colors" name="EyeColor">
                    <option value="Black">Black</option>
                    <option value="Blue">Blue</option>
                    <option value="Brown">brown</option>
                    <option value="Gray">gray</option>
                    <option value="Hazel">Hazel</option>
                </select>

            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.EyeColor, htmlAttributes: new { @class = "control-label col-md-2" })
                <h5 class="control-label col-md-2"><b>Eye Colour</b></h5>
                <div class="col-md-10">
                    @Html.DropDownList("EyeColor", (IEnumerable<SelectListItem>)ViewBag.EyeColour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EyeColor, "", new { @class = "text-danger" })
                </div>
            </div>*@



        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Glasses</b></h5>
            <div class="col-md-10">
                <select name="Glasses">
                    <option>No</option>
                    <option>Yes</option>

                </select>
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Glasses, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Glasses", (IEnumerable<SelectListItem>)ViewBag.Glasses, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Glasses, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Identity Mark</b></h5>
            <div class="col-md-10">
                <select name="IdentityMark">
                    <option>No</option>
                    <option>Scars</option>
                    <option>Birthmarks</option>
                    <option>moles</option>
                    <option>Tattoo</option>
                </select>
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.IdentityMark, htmlAttributes: new { @class = "control-label col-md-2" })
                <h5 class="control-label col-md-2"><b>Select Identity Mark</b></h5>
                <div class="col-md-10">
                    @Html.DropDownList("IdentityMark", (IEnumerable<SelectListItem>)ViewBag.IdentityMark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdentityMark, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Select Body Part</b></h5>
            <div class="col-md-10">
                <select name="IdentificationMarkOnBody">
                    <option>No</option>
                    <option>face</option>
                    <option>mouth</option>
                    <option>chin</option>
                    <option>shoulder</option>
                    <option>elbow</option>
                    <option>forearm</option>
                    <option>hand</option>
                    <option>foot</option>
                </select>
            </div>
        </div>



        @*<div class="form-group">
                @Html.LabelFor(model => model.IdentityMark, htmlAttributes: new { @class = "control-label col-md-2" })
                <h5 class="control-label col-md-2"><b>Select Body Part</b></h5>
                <div class="col-md-10">
                    @Html.DropDownList("IdentificationMarkOnBody", (IEnumerable<SelectListItem>)ViewBag.IdentityMarkLocation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdentificationMarkOnBody, "", new { @class = "text-danger" })
                </div>
            </div>*@



        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Shirt/Kameez Colour</b></h5>
            <div class="col-md-10">
                <select id="colors" name="Shirt">
                    <option value="Black">Black</option>
                    <option value="Blue">Blue</option>
                    <option value="Brown">brown</option>
                    <option value="Gray">gray</option>
                    <option value="Green">Green</option>
                    <option value="Hazel">Hazel</option>
                    <option value="Pink">pink</option>
                    <option value="Purple">purple</option>
                    <option value="Green">Green</option>
                    <option value="White">White</option>
                    <option value="Yellow">Yellow</option>
                    <option value="Orange">orange</option>
                </select>

            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Shirt, htmlAttributes: new { @class = "control-label col-md-2" })
                <h5 class="control-label col-md-2"><b>Shirt/Kameez Colour</b></h5>
                <div class="col-md-10">
                    @Html.DropDownList("Shirt", (IEnumerable<SelectListItem>)ViewBag.Colour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Shirt, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Trouser_Skert, htmlAttributes: new { @class = "control-label col-md-2" })
                <h5 class="control-label col-md-2"><b>Pent/Shalwar Colour</b></h5>
                <div class="col-md-10">
                    @Html.DropDownList("Trouser_Skert", (IEnumerable<SelectListItem>)ViewBag.Colour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Trouser_Skert, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Trouser_Skert Colour</b></h5>
            <div class="col-md-10">
                <select id="colors" name="Trouser_Skert">
                    <option value="Black">Black</option>
                    <option value="Blue">Blue</option>
                    <option value="Brown">brown</option>
                    <option value="Gray">gray</option>
                    <option value="Green">Green</option>
                    <option value="Hazel">Hazel</option>
                    <option value="Pink">pink</option>
                    <option value="Purple">purple</option>
                    <option value="Green">Green</option>
                    <option value="White">White</option>
                    <option value="Yellow">Yellow</option>
                    <option value="Orange">orange</option>
                </select>

            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.MissingLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                <h5 class="control-label col-md-2"><b>Province</b></h5>
                <div class="col-md-10">
                    @Html.DropDownList("Province", (IEnumerable<SelectListItem>)ViewBag.Province, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Province</b></h5>
            <div class="col-md-10">
                <select name="Province">
                    <option>Punjab</option>
                    <option>Blochistan</option>
                    <option>KPK</option>
                    <option>Sindh</option>
                    <option>Gilgit</option>
                    <option>Kashmir</option>
                    <option>Capital</option>
                </select>
            </div>
        </div>





        @*<div class="form-group">
            @Html.LabelFor(model => model.MissingLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <h5 class="control-label col-md-2"><b>City</b></h5>
            <div class="col-md-10">
                @Html.DropDownList("City", (IEnumerable<SelectListItem>)ViewBag.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>*@
       
        <div class="form-group">
            <h5 class="control-label col-md-2"><b>City</b></h5>
            <div class="col-md-10">
                <select name="City">
                    <option>Lahore</option>
                    <option>Faisalabad</option>
                    <option>Rawalpindi</option>
                    <option>Rawalpindi</option>
                    <option>Multan</option>
                    <option>Gujranwala</option>
                    <option>Sargodha</option>
                    <option>Sialkot</option>
                    <option>Bahawalpur</option>
                    <option>Gujrat</option>
                    <option>Sheikhupura</option>
                    <option>Gilgit</option>
                    <option>Jhang</option>
                    <option>Quetta</option>
                    <option>Turbat</option>
                    <option>Sibi</option>
                    <option>Lasbela</option>
                    <option>Zhob</option>
                    <option>Gwadar</option>
                    <option>Nasirabad</option>
                    <option>Jaffarabad</option>
                    <option>Khuzdar</option>
                    <option>Peshawar</option>
                    <option>Mardan</option>
                    <option>Abbottabad</option>
                    <option>Mingora</option>
                    <option>Kohat</option>
                    <option>Bannu</option>
                    <option>Swabi</option>
                    <option>Charsadda</option>
                    <option>Nowshera</option>
                    <option>Karachi</option>
                    <option>Hyderabad</option>
                    <option>Sukkur</option>
                    <option>Larkana</option>
                    <option>Nawabshah</option>
                    <option>MirpurKhas</option>
                    <option>Jacobabad</option>
                    <option>Shikarpur</option>
                    <option>Dadu</option>
                    <option>Gilgit</option>
                    <option>Skardu</option>
                    <option>Islamabad</option>
                </select>
            </div>
        </div>






        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Missing Location</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChildMissingLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChildMissingLocation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <h5 class="control-label col-md-2"><b>Select Image</b></h5>
            <div class="col-md-10">
                <input type="file" name="file" id="file" onchange="readURL(this);" style="width: 100%;" /> <br />
                <img id="ShowImage" src="#" />
                @Html.ValidationMessageFor(model => model.imageUrl, "", new { @class = "text-danger" })

                @*@Html.EditorFor(model => model.imageUrl, new { htmlAttributes = new { @class = "form-control" } })*@

            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Child_Missing_Date_Time, htmlAttributes: new {  @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Child Missing Date</b></h5>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Child_Missing_Date_Time, new { htmlAttributes = new { placeholder = " 01 01 2000", @class = "form-control" } })*@
                <input type="datetime-local" class="form-control" onclick="Upload()" name="Child_Missing_Date_Time" id="" placeholder="Date">

                @*     @Html.TextBoxFor(model => model.Child_Missing_Date_Time, new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." })*@
                @Html.ValidationMessageFor(model => model.Child_Missing_Date_Time, "", new { @class = "text-danger" })
            </div>
        </div>



        <br>
        <hr />
        <h4>DETAILS OF PERSON REPORTING MISSING CHILD</h4>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Report_by_Person_Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Report by Person</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Report_by_Person_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Report_by_Person_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Address</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Phone_, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Phone#</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone_, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone_, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Relation_to_Missing_Child, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Relation to Child</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Relation_to_Missing_Child, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Relation_to_Missing_Child, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <hr />

        <h4>DETAILS OF GUARDIAN MISSING CHILD</h4>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Father_Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Guardian Name</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Father_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Father_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Address_Of_Child, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <h5 class="control-label col-md-2"><b>Address</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address_Of_Child, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address_Of_Child, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Phone__, htmlAttributes: new { @class = "control-label col-md-2" })*@

            <h5 class="control-label col-md-2"><b>Phone#</b></h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone__, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone__, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" onclick="UploadCheck()" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
